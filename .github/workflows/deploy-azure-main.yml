name: Build and Release Azure Function App

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Setup .NET 8 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Unit Tests
      run: dotnet test ${{ github.workspace }}/HttpTriggerPostExperimentTests/HttpTriggerPostExperimentTests.csproj --configuration Release

    - name: Build Project
      run: dotnet build ${{ github.workspace }}/HttpPostExperiment/HttpPostExperiment.csproj --output ${{ github.workspace }}/publish_output --configuration Release

    - name: Archive files
      run: |
        mkdir -p ${{ github.workspace }}/artifacts
        powershell Compress-Archive -Path ${{ github.workspace }}/publish_output\* -DestinationPath ${{ github.workspace }}/artifacts\drop.zip
        mkdir -p ${{ github.workspace }}/release
        Copy-Item -Path ${{ github.workspace }}/artifacts\drop.zip -Destination ${{ github.workspace }}/release\drop.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: drop
        path: ${{ github.workspace }}/release/drop.zip

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify drop.zip exists
      run: |
        if (Test-Path "${{ github.workspace }}\release\drop.zip") {
          Write-Host "drop.zip exists"
        } else {
          Write-Host "drop.zip is missing"
          exit 1
        }

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ github.workspace }}/release/drop.zip
        tag_name: v${{ github.run_number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: List after build
      run: |
        cd ${{ github.workspace }}
        pwd
        Get-ChildItem -Recurse
